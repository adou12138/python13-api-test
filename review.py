# -*- coding: UTF-8 -*-
# 当前项目的名称: python13-api-test 
# 新文件名称：review 
# 当前登录名：LuckyLu
# 创建日期：2019/2/21 13:41
# 文件IDE名称：PyCharm

"""
自动化测试框架梳理


一、框架的意义 可读性，可维护性，可扩展性
1. 数据与代码分离 （数据驱动）

是什么样的一个框架？
是一个测试数据和代码分离的框架
如何做到数据到代码的分离？
根据数据的类型 （基础数据：环境数据 数据库信息 配置信息 都放在配置文件中来做管理）
还有一部分测试需要的数据：场景中的数据（登陆、注册），都放在excel管理
以什么一种形式来进行测试的？
以测试用例的描述来进行的
每一行都称之为一条测试用例
测试用例包括了几列，从某种意义来讲，这个就是功能测试用例
这个测试用例的好处是什么?
具备了功能测试用例的特点：
1. title用例的描述，知道测试什么功能
2. 后面的几列具备了api接口测试必备的几个条件，url，测试数据，请求方式，期望结果和实际结果的展示
有了这些，就相当于功能测试
好处就是：减少了代码的冗余，同样的接口只是不同数据的驱动，
比如测试登陆，不需要写N个登陆的代码来测试登陆这个接口，只需要有一个登陆的测试方法，传入不同的测试数据来实现不同场景的登陆覆盖
通过excel的管理，unittest和ddt框架的结合，实现了测试数据的驱动
测试数据的驱动的好处：
1.减少代码的冗余
2.可维护性更强
测试代码和测试数据是分开的，测试数据更改，是不需要更改代码

2. 结构分层（数据层，用例层，逻辑层）

整个框架分为了几层层，更好，更清晰的来维护我们的代码
数据层：最基础的服务，数据维护在excel里面，读和取实现的方法do_excel openpyxl
json（json.load读取文件 json.loads 读取字符串）
yaml的读取
用例层：一个模块一个用例（一个py一个class类有多个测试方法（login）针对同一个接口来测试，通过ddt）/一个模块N个用例
通过ddt-data装饰器，完成测试数据传递到测试方法，
代表我有多少组数据，有多少个测试方法（login），有多少个测试用例，相当于一个py文件里面有一个class类，测试类有N个测试方法，每个测试方法代表了一条测试用例
多个测试方法都是针对同一个接口来进行测试
逻辑层：每一个用例都有前置和后置条件，在测试之前的测试准备
unittest框架：setUp teardown 每个用例都执行& setUpClass teardownClass 每个测试类执行一次（session请求、数据库请求）
参数化数据：封装放在common里面o
request请求：完成http请求，不同请求有不同的请求方式（get/post），
根据接口需要（登陆之后才能操作）要传递cookies（responsede cookies拿到，然后放在第二次请求的request cookies里面传递）&token（返回中token_id）放在下一次请求的head里面
怎么完成不同接口之间的调用: 逻辑的判断，是通过request请求的封装放在common packge里面,
还有执行前后和数据库的交互，通过mysql的操作、文件的路径都是通过参数化完成
用例层是调用不同的工具类，完成不同的逻辑，最后再加上断言，不需要每个用例都做逻辑判断

二、好处：
1. 手工测试用例与自动用例完美结合，避免重复工作
2. 配置灵活，根据需要快速切换测试环境  conf
3. 常用功能封装，逻辑清晰，易于维护  common
4. 统一执行入口，管理测试用例集  执行runtest.py 执行一个文件就可以了
5. 持续集成，定时构建，快速反馈  jenkins

11.21 怎么设计数据框架的
json:字符串用loads，文件用load
接口项目请求：response cookies
request cookies
其他项目：response tokenID
request headers tokeni
逻辑层都在common里面，都是常量的封装
调用方式：
类属性通过类名就可以调用（只有一个工作区间）,保证同一个值，需要定义类属性
实例属性必须实例化一个实例之后，才能进行调用（有多个工作区间，a.adimnuser!=b.adminuser）

三、使用到技术/框架
1. 语言 Python
弱语法，不需要编译，面向对象

2. 测试框架 unittest（单元测试框架） ---pytest
用xml直接换成xml类？ 替换一个do_xml类就可以
unittest分层：testcase,testsuite,testload,testrun,mock

3. 接口调用 request ---是最简洁的，底层就是urlib2，唯一一个转基因http库
urlib 也可以完成http请求

4. 数据驱动 ddt
ddt类装饰器 data数据装饰器

5. 数据管理 openpyxl
openpyxl可以完成读写
pymysql 因为用的数据库是mysql
xpwl 只能完成读
xlrd 只能完成写

6. 数据库交互 pymysql ---根据数据库选择对应的第三方模块来完成
因为项目用的是mysql，根据数据库选择相应的第三方模块

7. 数据格式的转换 json 用双引号
数据格式转化：json/eval
区别：json针对json格式字符串，eval针对python数据的
eval 不能识别非python数据
json是跨语言的

8. 日志处理 logging --- 清晰的执行过程，快速定位问题
日志级别在配置里面，可以根据需要配置，可以在控制台，进行变执行变输出

9. 持续集成 jenkins
持续集成的好处：可视化 快速构建 部署 定时 自动执行
避免人工操作出错
快速部署

简历的编写&投递
一、如何编写进阿里
1. 技能长项写在建立最重要的位置
2. 项目是王道

二、如何投递简历
1. 投递时间 8
2. 投递网站 拉钩 51 猎聘
3. 简历设置在职不可见，其他均可见

三、面试准备
1. 框架一定要熟悉，简历上罗列的知识点一定要熟记于心
2. 面试题、笔试题、app有定时更新
3. 找丹丹老师拉入vip工作群


"""


